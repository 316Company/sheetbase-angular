{"version":3,"file":"spreadsheet.service.js","sourceRoot":"","sources":["../../../src/services/spreadsheet.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, NgZone } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { SheetbaseConfigService } from './sheetbase-config.service';\n\n@Injectable()\nexport class SpreadsheetService {\n\n  constructor(\n    private ngZone: NgZone,\n    private http: HttpClient,\n\n    @Inject(SheetbaseConfigService) private CONFIG\n  ) {\n  }\n\n  get(\n    spreadsheetId: string,\n    rangeA1: string,\n    dataType: string = null,\n    keyField: string = null,\n    returnObject: boolean = true\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if(rangeA1.indexOf(',') < 0) {\n        this.load(spreadsheetId, rangeA1)\n        .then(value => this.ngZone.run(() => {          \n          resolve(this.modifyValue(value, dataType, keyField, returnObject));\n        }))\n        .catch(reject);\n      } else {\n        let rangeStr = '';\n        ((rangeA1.split(',')).map(x => {return x.trim()})||[]).forEach(range => {\n          rangeStr += '&ranges='+ range;\n        });\n        this.loadBatch(spreadsheetId, rangeStr)\n        .then(value => this.ngZone.run(() => {\n          resolve(this.modifyValue(value, dataType, keyField, returnObject));\n        }))\n        .catch(reject);\n      }\n    });\n  }\n\n  private load(id: string, range: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.http.get<{values: any}>\n      (`https://sheets.googleapis.com/v4/spreadsheets/${id}/values/${range}?key=${this.CONFIG.googleApiKey}`)\n      .subscribe(response => {\n        resolve(this.transformValue(response.values));        \n      }, reject);\n    });\n  }\n\n  private transformValue(value): any[] {\n    let items = [],\n      headers = value[0] || [];\n\n    (value.slice(1, value.length) || []).forEach(rows => {\n      let item: any = {};\n      for (let i = 0; i < rows.length; i++) {\n        if(rows[i]) {\n          let val: any = rows[i];\n          item[headers[i]] = val;\n        }\n      }\n      items.push(item);\n    });\n\n    return items;\n  }\n\n  private loadBatch(id: string, ranges: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.http.get<{valueRanges: any}>\n      (`https://sheets.googleapis.com/v4/spreadsheets/${id}/values:batchGet?${ranges}&key=${this.CONFIG.googleApiKey}`)\n      .subscribe(response => {\n        resolve(this.transformBatchValue(response.valueRanges));        \n      }, reject);\n    });\n  }\n\n  private transformBatchValue(value): any[] {\n    // round 1\n    let base = this.transformValue(value[0].values || []);\n    let more = [];\n    (value.slice(1, value.length) || []).forEach(item => {\n      more.push(this.transformValue(item.values || []));\n    });\n\n    // round 2\n    let final = [];\n    (base || []).forEach(baseItem => {\n      (more || []).forEach(moreList => {\n        (moreList || []).forEach(moreItem => {\n          if(baseItem.key === moreItem.key) {\n            baseItem = Object.assign(baseItem, moreItem);\n          }\n        });\n      });\n      final.push(baseItem);\n    });\n\n    return final;\n  }\n\n  private modifyValue(\n    value: any,\n    dataType: string,\n    keyField: string,\n    returnObject: boolean\n  ): any {\n    let customModifier = (item, tools: any = {}) => { return item };\n    if(dataType && this.CONFIG.modifiers && this.CONFIG.modifiers[dataType]) customModifier = this.CONFIG.modifiers[dataType]; \n\n    let itemsObject = null;\n    let itemsArray = null;\n    (value||[]).forEach(item => {\n      \n      // basic modifier\n      for(let key in item) {\n        //transform JSON where possible\n        try {\n          item[key] = JSON.parse(item[key]);\n        } catch(e) {}\n\n        // transform number\n        if(!isNaN(item[key]) && Number(item[key]) % 1 === 0) item[key] = parseInt(item[key]);\n        if(!isNaN(item[key]) && Number(item[key]) % 1 !== 0) item[key] = parseFloat(item[key]);\n\n        // transform boolean value\n        if(typeof item[key] === 'string' || item[key] instanceof String) item[key] = ((item[key]).toLowerCase() === 'true') || ((item[key]).toLowerCase() === 'false' ? false : item[key]);\n\n        // delete null key\n        if(item[key] === '' || item[key] === null || item[key] === undefined) {\n          delete item[key];\n        }\n      }\n\n      // custom modifier\n      item = customModifier(item, {/* tools to help modify data */});\n\n      // transform array to object\n      itemsObject = itemsObject || {};\n      itemsObject[keyField ? item[keyField]: (item['key'] || item['slug'] || (''+ item['id']) || (''+ item['#']) || (''+ Math.random()*1E20))] = item;\n      itemsArray = itemsArray || [];\n      itemsArray.push(item);\n    });\n    \n    return returnObject ? itemsObject: itemsArray;\n  }\n\n}\n"]}