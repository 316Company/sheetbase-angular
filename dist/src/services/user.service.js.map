{"version":3,"file":"user.service.js","sourceRoot":"","sources":["../../../src/services/user.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport * as PubSub from 'pubsub-js';\nimport * as localforage from 'localforage';\n\nimport { UserDataService } from './user-data.service';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private ngZone: NgZone,\n\n    private userDataService: UserDataService,\n    private apiService: ApiService,\n  ) {\n  }\n\n  getToken(): string { return this.userDataService.token }\n\n  getUser(): any { return this.userDataService.user }\n\n  onAuthStateChanged(): Observable<any> {\n    return new Observable(observer => {\n      localforage.getItem<any>('sheetbaseAuthData')\n      .then(data => {\n\n        // save data\n        this.ngZone.run(() => {\n          this.userDataService.user = data.user;\n          this.userDataService.token = data.token;\n        });\n\n        observer.next(data ? data.user: null);\n      }).catch(error => {\n        observer.next(null);\n      });\n\n      PubSub.subscribe('SHEETBASE_AUTH_STATE_CHANGED', (msg, data) => {\n        observer.next(data ? data.user: null);\n      });\n    });\n  }\n\n  createUserWithEmailAndPassword(email: string, password: string): Observable<any> {\n    return new Observable(observer => {\n      if(!email || !password) return observer.error('Missing email or password!');\n\n      this.apiService.POST('/user/create', {},\n        {\n          credential: {\n            email,\n            password\n          }\n        }\n      ).subscribe(response => {\n        if(response.error) return observer.error(response);\n        // save data\n        this.ngZone.run(() => {\n          this.userDataService.user = response.data.user;\n          this.userDataService.token = response.data.token;\n        });\n\n        localforage.setItem('sheetbaseAuthData', response.data)\n        .then(() => {return})\n        .catch(error => {return});\n\n        PubSub.publish('SHEETBASE_AUTH_STATE_CHANGED', response.data);\n        observer.next(response);\n      }, error => observer.error(error));\n    });\n  }\n\n  signInWithEmailAndPassword(email: string, password: string) {\n    return new Observable(observer => {\n      if(!email || !password) return observer.error('Missing email or password!');\n\n      if(this.userDataService.user) observer.next({\n        token: this.userDataService.token,\n        user: this.userDataService.user\n      });\n\n      this.apiService.POST('/user/login', {},\n        {\n          credential: {\n            email,\n            password\n          }\n        }\n      ).subscribe(response => {\n        if(response.error) return observer.error(response);\n\n        // save data\n        this.ngZone.run(() => {\n          this.userDataService.user = response.data.user;\n          this.userDataService.token = response.data.token;\n        });\n\n        localforage.setItem('sheetbaseAuthData', response.data)\n        .then(() => {return})\n        .catch(error => {return});\n\n        PubSub.publish('SHEETBASE_AUTH_STATE_CHANGED', response.data);\n        observer.next(response);\n      }, error => observer.error(error));\n    });\n  }\n\n  signOut(): Observable<any> {\n    return new Observable(observer => {\n      this.userDataService.user = null;\n      this.userDataService.token = null;\n\n      localforage.removeItem('sheetbaseAuthData')\n      .then(() => {return})\n      .catch(error => {return});\n\n      PubSub.publish('SHEETBASE_AUTH_STATE_CHANGED', null);\n      observer.next(null);\n    });\n  }\n\n  updateProfile(profile: any): Observable<any> {\n    return new Observable(observer => {\n      if(!profile || !(profile instanceof Object)) return observer.error('Invalid profile data.');\n\n      if(!this.userDataService.user || !this.userDataService.token) return observer.error('Please login first!');\n\n      this.apiService.POST('/user/profile', {},\n        {\n          profile\n        }\n      ).subscribe(response => {\n        if(response.error) return observer.error(response);\n\n        // save data\n        this.ngZone.run(() => {\n          this.userDataService.user = response.data.user;\n        });\n\n        localforage.setItem('sheetbaseAuthData', {\n          token: this.userDataService.token,\n          user: response.data.user\n        })\n        .then(() => {return})\n        .catch(error => {return});\n\n        PubSub.publish('SHEETBASE_AUTH_STATE_CHANGED', response.data);\n        observer.next(response.data.user);\n      }, error => observer.error(error));\n    });\n  }\n\n  sendPasswordResetEmail(email: string): Observable<any> {\n    return new Observable(observer => {\n      if(!email) return observer.error('Missing email!');\n\n      this.apiService.POST('/auth/reset-password', {},\n        {\n          email\n        }\n      ).subscribe(response => {\n        if(response.error) return observer.error(response);\n        observer.next(response);\n      }, error => observer.error(error));\n    });\n  }\n\n  confirmPasswordReset(actionCode: string, newPassword: string): Observable<any> {\n    return new Observable(observer => {\n      if(!actionCode || !newPassword) return observer.error('Missing actionCode or password!');\n\n      this.apiService.POST('/auth/set-password', {},\n        {\n          code: actionCode,\n          newPassword\n        }\n      ).subscribe(response => {\n        if(response.error) return observer.error(response);\n        observer.next(response);\n      }, error => observer.error(error));\n    });\n  }\n\n\n  applyActionCode(actionCode: string): Observable<any> {\n    return new Observable(observer => {\n      if(!actionCode) return observer.error('Missing actionCode!');\n\n      this.apiService.POST('/auth/verify-code', {},\n        {\n          code: actionCode\n        }\n      ).subscribe(response => {\n        if(response.error) return observer.error(response);\n        observer.next(response);\n      }, error => observer.error(error));\n    });\n  }\n\n}\n"]}