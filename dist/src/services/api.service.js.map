{"version":3,"file":"api.service.js","sourceRoot":"","sources":["../../../src/services/api.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SheetbaseConfigService } from './sheetbase-config.service';\n\nimport { UserDataService } from './user-data.service';\n\nimport { IAppHTTPResponse } from '../misc/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient,\n\n    @Inject(SheetbaseConfigService) private CONFIG,\n    private userDataService: UserDataService\n  ) {\n  }\n\n  /**\n   * GET\n   * @param endpoint\n   * @param params\n   */\n  GET(\n    endpoint: string = null,\n    params: any = {}\n  ): Observable<IAppHTTPResponse> {\n    return new Observable(observer => {\n      if(!this.CONFIG.backendUrl) {\n        return observer.error('[Error][Sheetbase] No backend for this project!');\n      }\n\n      // build uri\n      let uri: string = this.CONFIG.backendUrl;\n      if(endpoint) uri += '?e='+ endpoint;\n      if(!endpoint && Object.keys(params||{}).length > 0) uri += '?';\n      for(let key in (params||{})) {\n        uri += '&'+ key +'='+ params[key];\n      }\n      if(!endpoint && Object.keys(params||{}).length > 0) uri = uri.replace('?&', '?');\n\n      // get data\n      if(!endpoint && Object.keys(params).length < 1) {\n        uri += '?apiKey='+ this.CONFIG.apiKey;\n      } else {\n        uri += '&apiKey='+ this.CONFIG.apiKey;\n      }\n      if(this.userDataService.token) uri += '&token='+ this.userDataService.token;\n      this.http.get<IAppHTTPResponse>(uri).subscribe(data => {\n        if(data.error) return observer.error(data);\n        observer.next(data);\n      }, error => observer.error(error));\n    });\n  }\n\n  /**\n   * POST\n   * @param endpoint \n   * @param params \n   * @param body \n   */\n  POST(\n    endpoint: string = null,\n    params: any = {},\n    body: any = {}\n  ): Observable<IAppHTTPResponse> {\n    return new Observable(observer => {\n      if(!this.CONFIG.backendUrl) {\n        return observer.error('[Error][Sheetbase] No backend for this project!');\n      }\n\n      // build uri\n      let uri: string = this.CONFIG.backendUrl;\n      if(endpoint) uri += '?e='+ endpoint;\n      if(!endpoint && Object.keys(params||{}).length > 0) uri += '?';\n      for(let key in (params||{})) {\n        uri += '&'+ key +'='+ params[key];\n      }\n      if(!endpoint && Object.keys(params||{}).length > 0) uri = uri.replace('?&', '?');\n\n      // get data\n      body = Object.assign({}, body, {\n        apiKey: this.CONFIG.apiKey\n      });\n      if(this.userDataService.token) body.token = this.userDataService.token;\n      this.http.post<IAppHTTPResponse>(uri, JSON.stringify(body), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).subscribe(data => {\n        if(data.error) return observer.error(data);\n        observer.next(data);\n      }, error => observer.error(error));\n    });\n  }\n\n\n}\n"]}