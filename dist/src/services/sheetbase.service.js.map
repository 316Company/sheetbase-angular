{"version":3,"file":"sheetbase.service.js","sourceRoot":"","sources":["../../../src/services/sheetbase.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, NgZone } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SheetbaseConfigService } from './sheetbase-config.service';\n\nimport { IDataQuery } from '../misc/interfaces';\nimport { HELPER } from '../misc/helper';\n\n\n@Injectable()\nexport class SheetbaseService {\n\n  private database: {\n    [collection: string]: any\n  };\n\n  constructor(\n    private ngZone: NgZone,\n    private http: HttpClient,\n\n    @Inject(SheetbaseConfigService) private CONFIG\n  ) {\n  }\n\n\n  /**\n   * Get data\n   * @param collection \n   * @param doc \n   * @param query \n   */\n  get(\n    collection: string,\n    doc: string = null,\n    query: IDataQuery = null\n  ): Observable<any> {\n    return new Observable(observer => {\n      let itemsObject = (this.database||{})[collection];\n      \n      // return data\n      if(itemsObject && Object.keys(itemsObject).length < 1) {\n        observer.next(this.returnData(collection, doc, query));\n        observer.complete();\n      }\n      this.spreadsheetGet({\n        id: this.CONFIG.database,\n        range: collection +'!A1:ZZ'\n      }, collection)\n      .then(data => {\n        this.ngZone.run(() => {\n          if(!this.database) this.database = {};\n          this.database[collection] = data;\n        });\n\n        observer.next(this.returnData(collection, doc, query));\n        observer.complete();\n      }).catch(error => { return });\n    });\n  }\n\n\n\n  /**\n   * \n   * @param collection \n   * @param doc \n   * @param query \n   */\n  private returnData(collection, doc, query) {\n    let itemsObject = (this.database||{})[collection] || {};\n    // item\n    if(doc) {\n      return Object.assign({\n        $key: doc\n      }, itemsObject[doc] || {})\n    }\n    // list\n    let itemsArray = [];\n    for(let key in itemsObject) {\n      itemsArray.push(Object.assign({\n        $key: key\n      }, itemsObject[key]));\n    }\n    return this.filterResult(itemsArray, query);\n  }\n\n  private filterResult(items: any[], query: IDataQuery) {\n    query = query || {};\n    let resultItems = [];\n\n    // filter\n    if(\n      query.orderByKey &&\n      (query.equalTo || (!query.equalTo && typeof query.equalTo === 'boolean'))\n    ) {\n      let keys = (query.orderByKey).split('/');\n      let keyFirst = keys[0];\n      keys = keys.slice(1, keys.length);\n\n      (items||[]).forEach(item => {\n        let value = item[keyFirst] || {};\n        // console.log(''+ item.title +' ', value, keys);\n\n        (keys||[]).forEach(key => {\n          if(value[key]) {\n            value = value[key];\n          } else {\n            return value = null;\n          }\n        });\n\n        // console.log('final value ', value);\n        if(\n          (typeof query.equalTo === 'boolean' && typeof value === 'boolean' && value === query.equalTo) || // true === true\n          (query.equalTo === '!null' && !!value) || // any (#false) === '!null'\n          (typeof query.equalTo !== 'boolean' && typeof value !== 'boolean' && value === query.equalTo) // string, number === string, number\n        ) resultItems.push(item);\n      });\n    } else {\n      resultItems = items;\n    }\n\n    // sort result\n    resultItems = HELPER.sort(resultItems, (query.orderByKey||'id'), (query.order||'asc'));\n    \n    // limit\n    if(query.limitToFirst) resultItems = resultItems.slice(\n      query.offset || 0,\n      query.limitToFirst + (query.offset || 0)\n    );\n    if(query.limitToLast) resultItems = resultItems.slice(\n      resultItems.length - query.limitToLast - (query.offset || 0),\n      (resultItems.length - (query.offset || 0))\n    );\n\n    return resultItems;\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /*\n  * SPREAHSHEET\n  * */\n  private spreadsheetGet(\n    sheet: {id: string, range: string},\n    dataType: string = null,\n    keyField: string = null,\n    returnObject: boolean = true\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if(sheet.range.indexOf(',') < 0) {\n        this.spreadsheetLoad(sheet.id, sheet.range)\n        .then(value => this.ngZone.run(() => {          \n          resolve(this.spreadsheetModifyValue(value, dataType, keyField, returnObject));\n        }))\n        .catch(reject);\n      } else {\n        let rangeStr = '';\n        ((sheet.range.split(',')).map(x => {return x.trim()})||[]).forEach(range => {\n          rangeStr += '&ranges='+ range;\n        });\n        this.spreadsheetLoadBatch(sheet.id, rangeStr)\n        .then(value => this.ngZone.run(() => {\n          resolve(this.spreadsheetModifyValue(value, dataType, keyField, returnObject));\n        }))\n        .catch(reject);\n      }\n    });\n  }\n\n  private spreadsheetLoad(id: string, range: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.http.get<{values: any}>\n      (`https://sheets.googleapis.com/v4/spreadsheets/${id}/values/${range}?key=${this.CONFIG.apiKey}`)\n      .subscribe(response => {\n        resolve(this.spreadsheetTransformValue(response.values));        \n      }, reject);\n    });\n  }\n\n  private spreadsheetTransformValue(value): any[] {\n    let items = [],\n      headers = value[0] || [];\n\n    (value.slice(1, value.length) || []).forEach(rows => {\n      let item: any = {};\n      for (let i = 0; i < rows.length; i++) {\n        if(rows[i]) {\n          let val: any = rows[i];\n          item[headers[i]] = val;\n        }\n      }\n      items.push(item);\n    });\n\n    return items;\n  }\n\n  private spreadsheetLoadBatch(id: string, ranges: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.http.get<{valueRanges: any}>\n      (`https://sheets.googleapis.com/v4/spreadsheets/${id}/values:batchGet?${ranges}&key=${this.CONFIG.apiKey}`)\n      .subscribe(response => {\n        resolve(this.spreadsheetTransformBatchValue(response.valueRanges));        \n      }, reject);\n    });\n  }\n\n  private spreadsheetTransformBatchValue(value): any[] {\n    // round 1\n    let base = this.spreadsheetTransformValue(value[0].values || []);\n    let more = [];\n    (value.slice(1, value.length) || []).forEach(item => {\n      more.push(this.spreadsheetTransformValue(item.values || []));\n    });\n\n    // round 2\n    let final = [];\n    (base || []).forEach(baseItem => {\n      (more || []).forEach(moreList => {\n        (moreList || []).forEach(moreItem => {\n          if(baseItem.key === moreItem.key) {\n            baseItem = Object.assign(baseItem, moreItem);\n          }\n        });\n      });\n      final.push(baseItem);\n    });\n\n    return final;\n  }\n\n  private spreadsheetModifyValue(\n    value: any,\n    dataType: string,\n    keyField: string,\n    returnObject: boolean\n  ): any {\n    let customModifier = (item, tools: any = {}) => { return item };\n    if(dataType && this.CONFIG.modifiers && this.CONFIG.modifiers[dataType]) customModifier = this.CONFIG.modifiers[dataType]; \n\n    let itemsObject = null;\n    let itemsArray = null;\n    (value||[]).forEach(item => {\n      \n      // basic modifier\n      for(let key in item) {\n        //transform JSON where possible\n        try {\n          item[key] = JSON.parse(item[key]);\n        } catch(e) {}\n\n        // transform number\n        if(!isNaN(item[key]) && Number(item[key]) % 1 === 0) item[key] = parseInt(item[key]);\n        if(!isNaN(item[key]) && Number(item[key]) % 1 !== 0) item[key] = parseFloat(item[key]);\n\n        // transform boolean value\n        if(typeof item[key] === 'string' || item[key] instanceof String) item[key] = ((item[key]).toLowerCase() === 'true') || ((item[key]).toLowerCase() === 'false' ? false : item[key]);\n\n        // delete null key\n        if(item[key] === '' || item[key] === null || item[key] === undefined) {\n          delete item[key];\n        }\n      }\n\n      // custom modifier\n      item = customModifier(item, {/* tools to help modify data */});\n\n      // transform array to object\n      itemsObject = itemsObject || {};\n      itemsObject[keyField ? item[keyField]: (item['key'] || item['slug'] || (''+ item['id']) || (''+ item['#']) || (''+ Math.random()*1E20))] = item;\n      itemsArray = itemsArray || [];\n      itemsArray.push(item);\n    });\n    \n    return returnObject ? itemsObject: itemsArray;\n  }\n\n}\n"]}