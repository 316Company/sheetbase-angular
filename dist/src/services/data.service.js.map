{"version":3,"file":"data.service.js","sourceRoot":"","sources":["../../../src/services/data.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { SheetbaseConfigService } from './sheetbase-config.service';\nimport { ApiService } from './api.service';\nimport { SpreadsheetService } from './spreadsheet.service';\n\nimport { IDataQuery, ISheetbaseConfig } from '../misc/interfaces';\nimport { HELPER } from '../misc/helper';\n\n\n@Injectable()\nexport class DataService {\n\n  private database: {\n    [collection: string]: any\n  };\n\n  constructor(\n    private ngZone: NgZone,\n\n    @Inject(SheetbaseConfigService) private CONFIG: ISheetbaseConfig,\n    private apiService: ApiService,\n    private spreadsheetService: SpreadsheetService,\n  ) {\n  }\n\n\n  /**\n   * Get data\n   * @param collection \n   * @param doc \n   * @param query \n   */\n  get(\n    collection: string,\n    doc: string = null,\n    query: IDataQuery = null\n  ): Observable<any> {\n    return new Observable(observer => {\n\n      let itemsObject = (this.database||{})[collection];\n      \n      // return data\n      if(itemsObject && Object.keys(itemsObject).length > 0) {\n        observer.next(this.returnData(collection, doc, query));\n      }\n\n      let dataGetter: Observable<any> = this.getData(collection, doc, query);\n      if(this.CONFIG.googleApiKey && this.CONFIG.databaseId) {\n        dataGetter = this.getDataSolutionLite(collection, doc, query);\n      }\n      \n      dataGetter.subscribe(result => {\n        this.ngZone.run(() => {\n          if(!this.database) this.database = {};\n          this.database[collection] = result;\n        });\n        observer.next(this.returnData(collection, doc, query));\n      }, error => observer.error(error));\n\n    });\n  }\n\n  private getData(\n    collection: string,\n    doc: string,\n    query: IDataQuery\n  ): Observable<any> {\n    return new Observable(observer => {\n      this.apiService.GET('/data', {\n        table: collection\n      }).subscribe(response => {\n        observer.next(\n          this.modifyValue(response.data, collection)\n        );\n      }, error => observer.error(error));\n    });\n  }\n\n  private getDataSolutionLite(\n    collection: string,\n    doc: string,\n    query: IDataQuery\n  ): Observable<any> {\n    return new Observable(observer => {\n      this.spreadsheetService.get(\n        collection\n      )\n      .subscribe(result => {\n        observer.next(result);\n      }, error => observer.error(error));\n    });\n  }\n\n\n  /**\n   * \n   * @param collection \n   * @param doc \n   * @param query \n   */\n  private returnData(collection, doc, query) {\n    let itemsObject = (this.database||{})[collection] || {};\n    // item\n    if(doc) {\n      return Object.assign({\n        $key: doc\n      }, itemsObject[doc] || {})\n    }\n    // list\n    let itemsArray = [];\n    for(let key in itemsObject) {\n      itemsArray.push(Object.assign({\n        $key: key\n      }, itemsObject[key]));\n    }\n    return this.filterResult(itemsArray, query);\n  }\n\n  private filterResult(items: any[], query: IDataQuery) {\n    query = query || {};\n    let resultItems = [];\n\n    // filter\n    if(\n      query.orderByKey &&\n      (query.equalTo || (!query.equalTo && typeof query.equalTo === 'boolean'))\n    ) {\n      let keys = (query.orderByKey).split('/');\n      let keyFirst = keys[0];\n      keys = keys.slice(1, keys.length);\n\n      (items||[]).forEach(item => {\n        let value = item[keyFirst] || {};\n        // console.log(''+ item.title +' ', value, keys);\n\n        (keys||[]).forEach(key => {\n          if(value[key]) {\n            value = value[key];\n          } else {\n            return value = null;\n          }\n        });\n\n        // console.log('final value ', value);\n        if(\n          (typeof query.equalTo === 'boolean' && typeof value === 'boolean' && value === query.equalTo) || // true === true\n          (query.equalTo === '!null' && !!value) || // any (#false) === '!null'\n          (typeof query.equalTo !== 'boolean' && typeof value !== 'boolean' && value === query.equalTo) // string, number === string, number\n        ) resultItems.push(item);\n      });\n    } else {\n      resultItems = items;\n    }\n\n    // sort result\n    resultItems = HELPER.sort(resultItems, (query.orderByKey||'id'), (query.order||'asc'));\n    \n    // limit\n    if(query.limitToFirst) resultItems = resultItems.slice(\n      query.offset || 0,\n      query.limitToFirst + (query.offset || 0)\n    );\n    if(query.limitToLast) resultItems = resultItems.slice(\n      resultItems.length - query.limitToLast - (query.offset || 0),\n      (resultItems.length - (query.offset || 0))\n    );\n\n    return resultItems;\n  }\n\n  private modifyValue(\n    value: any,\n    table: string\n  ): any {\n    let customModifier = (item, tools: any = {}) => { return item };\n    if(table && this.CONFIG.modifiers && this.CONFIG.modifiers[table]) customModifier = this.CONFIG.modifiers[table]; \n\n    let itemsObject = {};\n    for(let key in value) {\n      let item = value[key];\n      item = customModifier(item, {/* tools to help modify data */});\n      itemsObject[key] = item;\n    }\n    \n    return itemsObject;\n  }\n\n\n}\n"]}